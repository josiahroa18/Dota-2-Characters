{"ast":null,"code":"import { FETCH_DATA, FETCH_DATA_SUCCESS, FETCH_DATA_ERROR } from '../actions/dataActions';\nconst initialState = {\n  data: [],\n  error: '',\n  isFetching: false\n};\nexport const dataReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FETCH_DATA:\n      return { ...state,\n        error: '',\n        isFetching: true\n      };\n\n    case FETCH_DATA_SUCCESS:\n      return { ...state,\n        data: action.payload,\n        error: '',\n        isFetching: false\n      };\n\n    case FETCH_DATA_ERROR:\n      return { ...state,\n        error: action.payload,\n        isFetching: false\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/josiahroa/Documents/Lambda School/10-Week/React-Redux-App/app/src/reducers/dataReducer.js"],"names":["FETCH_DATA","FETCH_DATA_SUCCESS","FETCH_DATA_ERROR","initialState","data","error","isFetching","dataReducer","state","action","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,kBAArB,EAAyCC,gBAAzC,QAAiE,wBAAjE;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,KAAK,EAAE,EAFU;AAGjBC,EAAAA,UAAU,EAAE;AAHK,CAArB;AAMA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGL,YAAT,EAAuBM,MAAvB,KAAkC;AACzD,UAAOA,MAAM,CAACC,IAAd;AACI,SAAKV,UAAL;AACI,aAAO,EACH,GAAGQ,KADA;AAEHH,QAAAA,KAAK,EAAE,EAFJ;AAGHC,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAKJ,SAAKL,kBAAL;AACI,aAAO,EACH,GAAGO,KADA;AAEHJ,QAAAA,IAAI,EAAEK,MAAM,CAACE,OAFV;AAGHN,QAAAA,KAAK,EAAE,EAHJ;AAIHC,QAAAA,UAAU,EAAE;AAJT,OAAP;;AAMJ,SAAKJ,gBAAL;AACI,aAAO,EACH,GAAGM,KADA;AAEHH,QAAAA,KAAK,EAAEI,MAAM,CAACE,OAFX;AAGHL,QAAAA,UAAU,EAAE;AAHT,OAAP;;AAKJ;AACI,aAAOE,KAAP;AArBR;AAuBH,CAxBM","sourcesContent":["import { FETCH_DATA, FETCH_DATA_SUCCESS, FETCH_DATA_ERROR } from '../actions/dataActions';\n\nconst initialState = {\n    data: [],\n    error: '',\n    isFetching: false\n}\n\nexport const dataReducer = (state = initialState, action) => {\n    switch(action.type){\n        case FETCH_DATA:\n            return {\n                ...state,\n                error: '',\n                isFetching: true\n            }\n        case FETCH_DATA_SUCCESS:\n            return {\n                ...state,\n                data: action.payload,\n                error: '',\n                isFetching: false\n            }\n        case FETCH_DATA_ERROR:\n            return {\n                ...state,\n                error: action.payload,\n                isFetching: false\n            }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}